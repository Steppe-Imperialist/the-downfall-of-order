#	Example:
# 
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = fascism
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

#####################################
### emergency_factory_conversion ####
#####################################

#This is going to give misleading and ugly tooltips. Making it nice will take effort. TODO_WTT_CD make nice or ignore and remove comment. Easiest solution is just making a custom tooltip that says "5 civilian factories will be converted to military factories" and ignore telling the player the states where it will happen.

replace_civ_with_arms_factories = {	

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
	
	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {	
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_everything }
		}
	}
}

# Add AI strategies in case of Central European Alliance
#GER_democratic_nations_ai_strategies = { #NVX# Removed
#	# Reduce Contain against RUS
#	add_ai_strategy = {
#		type = contain
#		id = "RUS"
#		value = -800
#	}
#	add_ai_strategy = {
#		type = contain
#		id = "ITA"
#		value = -800
#	}
#	# Poland
#	add_ai_strategy = {
#		type = protect
#		id = "POL"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = ignore
#		id = "POL"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "POL"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "POL"
#		value = -200
#	}
#	# Finland
#	add_ai_strategy = {
#		type = protect
#		id = "FIN"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = ignore
#		id = "FIN"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "FIN"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "FIN"
#		value = -200
#	}
#	# Estonia
#	add_ai_strategy = {
#		type = protect
#		id = "EST"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = ignore
#		id = "EST"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "EST"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "EST"
#		value = -200
#	}
#	# Latvia
#	add_ai_strategy = {
#		type = protect
#		id = "LAT"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = ignore
#		id = "LAT"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "LAT"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "LAT"
#		value = -200
#	}
#	# Lithuania
#	add_ai_strategy = {
#		type = protect
#		id = "LIT"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = ignore
#		id = "LIT"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "LIT"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "LIT"
#		value = -200
#	}
#	# Romania
#	add_ai_strategy = {
#		type = protect
#		id = "ROM"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = ignore
#		id = "ROM"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "ROM"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "ROM"
#		value = -200
#	}
#	# Norway
#	add_ai_strategy = {
#		type = ignore
#		id = "NOR"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "NOR"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "NOR"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "NOR"
#		value = -200
#	}
#	# Sweden
#	add_ai_strategy = {
#		type = ignore
#		id = "SWE"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "SWE"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "SWE"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "SWE"
#		value = -200
#	}
#	# Denmark
#	add_ai_strategy = {
#		type = ignore
#		id = "DEN"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "DEN"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "DEN"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "DEN"
#		value = -200
#	}
#	# Netherlands
#	add_ai_strategy = {
#		type = ignore
#		id = "HOL"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "HOL"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "HOL"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "HOL"
#		value = -200
#	}
#	# Belgium
#	add_ai_strategy = {
#		type = ignore
#		id = "BEL"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "BEL"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "BEL"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "BEL"
#		value = -200
#	}
#	# Luxemburg
#	add_ai_strategy = {
#		type = ignore
#		id = "LUX"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "LUX"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "LUX"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "LUX"
#		value = -200
#	}
#	# Austria
#	add_ai_strategy = {
#		type = ignore
#		id = "AUS"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "AUS"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "AUS"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "AUS"
#		value = -200
#	}
#	# Hungary
#	add_ai_strategy = {
#		type = ignore
#		id = "HUN"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "HUN"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "HUN"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "HUN"
#		value = -200
#	}
#	# Czechoslovakia
#	add_ai_strategy = {
#		type = ignore
#		id = "CZE"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "CZE"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "CZE"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "CZE"
#		value = -200
#	}
#	# Yugoslavia
#	add_ai_strategy = {
#		type = ignore
#		id = "YUG"
#		value = 200
#	}
#	add_ai_strategy = {
#		type = protect
#		id = "YUG"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = befriend
#		id = "YUG"
#		value = -200
#	}
#	add_ai_strategy = {
#		type = alliance
#		id = "YUG"
#		value = -200
#	}
#} #/NVX#

print_variable_log_effect = {
	print_variables = {
		file = variables_yug
		append = yes
	}
}

get_best_alliance_match_democratic_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				NVX_has_government_democratic = yes #NVX#
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

get_best_alliance_match_fascism_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = fascist #NVX#
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

get_best_alliance_match_communism_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = communist #NVX#
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

#remove_naval_treaty_effect = { #NVX# Removed
#	if = {
#		limit = {
#			has_idea = MTG_naval_treaty_adherent
#		}
#		remove_ideas = MTG_naval_treaty_adherent
#	}
#	else_if = {
#		limit = {
#			has_idea = MTG_naval_treaty_cheating
#		}
#		remove_ideas = MTG_naval_treaty_cheating
#	}
#	else_if = {
#		limit = {
#			has_idea = MTG_naval_treaty_adherent_reduced
#		}
#		remove_ideas = MTG_naval_treaty_adherent_reduced
#	}
#	else_if = {
#		limit = {
#			has_idea = MTG_naval_treaty_cheating_reduced
#		}
#		remove_ideas = MTG_naval_treaty_cheating_reduced
#	}
#	set_country_flag = MTG_naval_treaty_abandoned
#} #/NVX#

#civil_war_anti_exploiter_punitive_action = { #NVX# Removed
#	# Anti-exploiter punitive brigades! BET YA DIDN'T SEE THAT COMING DID YA?!
#	if = {
#		limit = {
#			has_army_size = {
#			    size < 1
#			}
#		}
#		division_template = {
#			name = "Anti-Exploit Punitive Brigade"
#			priority = 1
#			division_names_group = ENG_MAR_01
#			is_locked = yes
#			regiments = {
#				infantry = { x = 0 y = 0 }
#				infantry = { x = 0 y = 1 }
#				infantry = { x = 0 y = 2 }
#	
#		   	   	infantry = { x = 1 y = 0 }
#				infantry = { x = 1 y = 1 }
#				infantry = { x = 1 y = 2 }
#	
#		   	   	infantry = { x = 2 y = 0 }
#				artillery_brigade = { x = 2 y = 1 }
#				artillery_brigade = { x = 2 y = 2 }
#			}
#			support = {
#				engineer = { x = 0 y = 0 }
#				recon = { x = 0 y = 1 }
#				artillery = { x = 0 y = 2 }
#			}
#		}
#		random_state = {
#			limit = {
#				is_capital = yes
#				is_fully_controlled_by = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#		}
#		random_state = {
#			limit = {
#				is_in_home_area = yes
#				is_fully_controlled_by = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#		}
#		random_state = {
#			limit = {
#				is_in_home_area = yes
#				is_fully_controlled_by = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#		}
#		random_state = {
#			limit = {
#				is_in_home_area = yes
#				is_fully_controlled_by = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#		}
#		random_state = {
#			limit = {
#				is_in_home_area = yes
#				is_fully_controlled_by = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#			create_unit = {
#				division = "division_template = \"Anti-Exploit Punitive Brigade\" start_experience_factor = 1 start_equipment_factor = 1"
#				owner = PREV
#			}
#		}
#	}
#} #/NVX#

clear_sabotaged_resources_if_necesary = {
	if = {
		limit = {
			not = {
				has_dynamic_modifier = {
					modifier = sabotaged_resources
				}
			}
		}
		
		clear_variable = sabotaged_oil
		clear_variable = sabotaged_aluminium
		clear_variable = sabotaged_rubber
		clear_variable = sabotaged_tungsten
		clear_variable = sabotaged_steel
		clear_variable = sabotaged_chromium
	}
}

remove_from_allowed_party = { #NVX# Changed
	if = {
		limit = { has_government = islamist }
		set_temp_variable = { allowed_party_islamist = 0 }
	}
	else_if = {
		limit = { has_government = fascist }
		set_temp_variable = { allowed_party_fascist = 0 }
	}
	else_if = {
		limit = { has_government = nationalist }
		set_temp_variable = { allowed_party_nationalist = 0 }
	}
	else_if = {
		limit = { has_government = monarchist }
		set_temp_variable = { allowed_party_monarchist = 0 }
	}
	else_if = {
		limit = { has_government = reactionary }
		set_temp_variable = { allowed_party_reactionary = 0 }
	}
	else_if = {
		limit = { has_government = conservative }
		set_temp_variable = { allowed_party_conservative = 0 }
	}
	else_if = {
		limit = { has_government = market_liberal }
		set_temp_variable = { allowed_party_market_liberal = 0 }
	}
	else_if = {
		limit = { has_government = social_liberal }
		set_temp_variable = { allowed_party_social_liberal = 0 }
	}
	else_if = {
		limit = { has_government = social_democrat }
		set_temp_variable = { allowed_party_social_democrat = 0 }
	}
	else_if = {
		limit = { has_government = progressive }
		set_temp_variable = { allowed_party_progressive = 0 }
	}
	else_if = {
		limit = { has_government = democratic_socialist }
		set_temp_variable = { allowed_party_democratic_socialist = 0 }
	}
	else_if = {
		limit = { has_government = communist }
		set_temp_variable = { allowed_party_communist = 0 }
	}
} #/NVX#

#expectes a temp variable country_to_initiate which should contain original_tag to instantiate as a collabration government
instantiate_collaboration_government = {
	custom_effect_tooltip = compliance_80_effect_tooltip
	hidden_effect = {
		set_variable = { collaboration_formed@var:country_to_initiate = 1 }
		
		if = {
			# if country_to_initiate does not exist, simply release it as a puppet
			limit = { 
				var:country_to_initiate = {
					exists = no
				}
			}
			var:country_to_initiate = { set_variable = { collaboration_formed_by = PREV } }
			release_autonomy = {
				target = country_to_initiate
				autonomy_state = autonomy_collaboration_government
				freedom_level = 0.5
			}
		}
		else = {
			# if country_to_initiate exists, create a dynamic country as our new puppet
			
			create_dynamic_country = {
				original_tag = country_to_initiate
			
				set_variable = { collaboration_formed_by = PREV }
				set_temp_variable = { new_country = this }
				
				PREV = {
					every_controlled_state = {
						limit = { occupied_country_tag = country_to_initiate }
						
						var:new_country = {
							transfer_state = PREV
						}
					}
					
					puppet = new_country
					
					set_autonomy = {
						target = new_country
						autonomy_state = autonomy_collaboration_government
						freedom_level = 0.5
					}
				}
			}
		}
	}
}

abandon_colony_tag = {
	if = {
		limit = {
			is_subject = yes
		}
		if = {
			limit = {
				original_tag = CAN
			}
			if = { 
				limit = { NOT = { has_dlc = "Together for Victory" } }
				set_cosmetic_tag = CAN_ALY
			}
			else = {
				set_cosmetic_tag = CAN_UK
			}
		}
		else_if = {
			limit = {
				original_tag = RAJ
			}
			set_cosmetic_tag = RAJ_UK
		}
		else_if = {
			limit = {
				original_tag = MAL
			}
			set_cosmetic_tag = MAL_UK
		}
		else_if = {
			limit = {
				original_tag = INS
			}
			set_cosmetic_tag = INS_HOL
		}
	}
	else = {
		if = {
			limit = {
				original_tag = RAJ
				NOT = {
					any_country = {
						has_cosmetic_tag = RAJ_FREE
					}
				}
			}
			set_cosmetic_tag = RAJ_FREE
		}
		else_if = {
			limit = {
				original_tag = CAN
				NOT = {
					any_country = {
						has_cosmetic_tag = CAN_FREE
					}
				}
			}
			set_cosmetic_tag = CAN_FREE
		}
		else_if = {
			limit = {
				original_tag = INS
				NOT = { has_cosmetic_tag = MAJ_UNIFIED }
				NOT = {
					any_country = {
						has_cosmetic_tag = INS_FREE
					}
				}
			}
			set_cosmetic_tag = INS_FREE
		}
		else_if = {
			limit = {
				OR = {
					has_cosmetic_tag = united_polynesia
					has_cosmetic_tag = MAJ_UNIFIED
				}
			}
		}
		else = {
			drop_cosmetic_tag = yes
		}
	}
}

gain_random_agency_upgrade = { #Gives a random agency upgrade or grants a free agency if one has not yet been established
	custom_effect_tooltip = free_agency_upgrade_tt
	hidden_effect = {
		if = {
			limit = {
				has_intelligence_agency = no
			}
			create_intelligence_agency = yes
		}
		else = {
			random_list = {
				1 = {
					upgrade_intelligence_agency = upgrade_economy_civilian
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_economy_civilian
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_army_department
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_army_department
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_naval_department
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_naval_department
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_airforce_department
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_airforce_department
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_passive_defense
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_passive_defense
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_anti_partisan
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_anti_partisan
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_blueprint_stealing
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_blueprint_stealing
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_portable_radios
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_portable_radios
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_invisible_ink
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_invisible_ink
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_plastic_explosives
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_plastic_explosives
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_suicide_pills
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_suicide_pills
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_training_centers
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_training_centers
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_commando_training
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_commando_training
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_interrogation_techniques
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_interrogation_techniques
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_diplo_training
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_diplo_training
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_psycho_warfare
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_psycho_warfare
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_form_department
					modifier = {
						factor = 0
						has_done_agency_upgrade = upgrade_form_department
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_decryption_boost
					modifier = {
						factor = 0
						OR = {
							has_done_agency_upgrade = upgrade_decryption_boost
							NOT = { has_done_agency_upgrade = upgrade_form_department }
						}
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_decryption_boost_2
					modifier = {
						factor = 0
						OR = {
							has_done_agency_upgrade = upgrade_decryption_boost_2
							NOT = { has_done_agency_upgrade = upgrade_form_department }
							NOT = { has_done_agency_upgrade = upgrade_decryption_boost }
						}
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_crypto_strength
					modifier = {
						factor = 0
						OR = {
							has_done_agency_upgrade = upgrade_crypto_strength
							NOT = { has_done_agency_upgrade = upgrade_form_department }
						}
					}
				}
				1 = {
					upgrade_intelligence_agency = upgrade_crypto_strength_2
					modifier = {
						factor = 0
						OR = {
							has_done_agency_upgrade = upgrade_crypto_strength_2
							NOT = { has_done_agency_upgrade = upgrade_form_department }
							NOT = { has_done_agency_upgrade = upgrade_crypto_strength }
						}
					}
				}
			}
		}
	}
}
#on_daily_USA = {
#	# you can specify an on daily action for a specific country
#}

remove_any_country_role_from_character = { #Expected to be used inside the character scope
	#log = "I am [THIS.GetName]"
	if = {
		limit = {
			is_character_slot = air_chief
		}
		remove_advisor_role = { slot = air_chief }
	}
	if = {
		limit = {
			is_character_slot = army_chief
		}
		remove_advisor_role = { slot = army_chief }
	}
	if = {
		limit = {
			is_character_slot = navy_chief
		}
		remove_advisor_role = { slot = navy_chief }
	}
	if = {
		limit = {
			is_character_slot = high_command
		}
		remove_advisor_role = { slot = high_command }
	}
	if = {
		limit = {
			is_character_slot = theorist
		}
		remove_advisor_role = { slot = theorist }
	}
	if = {
		limit = {
			is_character_slot = political_advisor
		}
		remove_advisor_role = { slot = political_advisor }
	}
}
add_potential_special_forces_tree = {
	custom_effect_tooltip = add_potential_special_forces_tree_tt
	if = {
		limit = { NOT = { has_variable = sf_trees } }
		set_variable = { sf_trees = 2 }
	}
	else = {
		add_to_variable = { sf_trees = 1 }
	}
}

remove_potential_special_forces_tree = {
	if = {
		limit = { NOT = { has_variable = sf_trees } }
		set_variable = { sf_trees = 0 }
	}
	else = {
		subtract_from_variable = { sf_trees = 1 }
	}
}

store_core_states_on_game_start = { #Should be called from history file
	every_core_state = {
		ROOT = {
			add_to_array = {
				array = core_states_at_game_start
				value = PREV
			}
		}
	}
}

add_temp_unit_leader_role = {
	hidden_effect = {
		if = {
			limit = { is_unit_leader = no }
			add_corps_commander_role = {
				skill = 1
				traits = { just_visiting }
				visible = { always = no }
			}
			set_character_flag = temp_unit_leader
		}
	}
}

remove_temp_unit_leader_role = {
	hidden_effect = {
		if = {
			limit = { has_character_flag = temp_unit_leader }
			remove_unit_leader_role = yes
			clr_character_flag = temp_unit_leader
		}
	}
}